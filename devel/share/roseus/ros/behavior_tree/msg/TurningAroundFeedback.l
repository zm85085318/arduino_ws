;; Auto-generated. Do not edit!


(when (boundp 'behavior_tree::TurningAroundFeedback)
  (if (not (find-package "BEHAVIOR_TREE"))
    (make-package "BEHAVIOR_TREE"))
  (shadow 'TurningAroundFeedback (find-package "BEHAVIOR_TREE")))
(unless (find-package "BEHAVIOR_TREE::TURNINGAROUNDFEEDBACK")
  (make-package "BEHAVIOR_TREE::TURNINGAROUNDFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude TurningAroundFeedback.msg.html


(defclass behavior_tree::TurningAroundFeedback
  :super ros::object
  :slots (_rotation_status ))

(defmethod behavior_tree::TurningAroundFeedback
  (:init
   (&key
    ((:rotation_status __rotation_status) 0.0)
    )
   (send-super :init)
   (setq _rotation_status (float __rotation_status))
   self)
  (:rotation_status
   (&optional __rotation_status)
   (if __rotation_status (setq _rotation_status __rotation_status)) _rotation_status)
  (:serialization-length
   ()
   (+
    ;; float32 _rotation_status
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _rotation_status
       (sys::poke _rotation_status (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _rotation_status
     (setq _rotation_status (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get behavior_tree::TurningAroundFeedback :md5sum-) "8d86daa292f3a880c6162663bc037e95")
(setf (get behavior_tree::TurningAroundFeedback :datatype-) "behavior_tree/TurningAroundFeedback")
(setf (get behavior_tree::TurningAroundFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
float32 rotation_status

")



(provide :behavior_tree/TurningAroundFeedback "8d86daa292f3a880c6162663bc037e95")


